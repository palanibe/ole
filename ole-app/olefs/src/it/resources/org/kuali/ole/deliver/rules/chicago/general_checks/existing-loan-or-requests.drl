package org.kuali.ole.deliver.rules.general

import org.kuali.ole.deliver.bo.OlePatronDocument
import org.kuali.ole.deliver.bo.OleLoanDocument
import org.kuali.ole.deliver.drools.DroolsExchange
import org.kuali.ole.deliver.bo.OleDeliverRequestBo
import org.kuali.ole.deliver.util.OleItemRecordForCirc
import java.util.Date
import java.text.SimpleDateFormat
import org.kuali.ole.deliver.drools.DroolsConstants
import org.kuali.ole.deliver.util.DroolsResponse


rule "Available Item by same patron with an existing request"
 agenda-group "request-or-existing-loan-checks"
 activation-group "request-or-existing-loan-checks"
 when
 $p : OlePatronDocument()
 $i : OleItemRecordForCirc($is: getItemStatusRecord(), null!= $is, $is.getCode() not in  ("LOANED"))
 $dr: OleDeliverRequestBo($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() != $p.getOlePatronId())
 $l : OleLoanDocument(!isRequestPatron())
 $d : DroolsResponse()

 then
  $d.addErrorMessage("Item has an existing request and is available.");
  $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
  $d.addErrorMessageCode(DroolsConstants.REQUEST_EXITS_FOR_AVAIL_ITEM);
 end

 rule "On Hold Item by same patron with an existing request and recall request check"
  agenda-group "request-or-existing-loan-checks"
  activation-group "request-or-existing-loan-checks"
  when
  $p : OlePatronDocument()
  $i : OleItemRecordForCirc($is: getItemStatusRecord(), null!= $is, $is.getCode() in ("ONHOLD"))
  $dr: OleDeliverRequestBo($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() != $p.getOlePatronId(),
				 getRequestTypeCode() in ("Recall/Hold Request","Recall/Delivery Request"))
  $l : OleLoanDocument(isRequestPatron())
  $d : DroolsResponse()

  then
   $d.addErrorMessage("Item is on hold and has an outstanding Recall Request for another patron, so the due date will be truncated accordingly.");
   $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   $d.addErrorMessageCode(DroolsConstants.REQUEST_EXITS_FOR_AVAIL_ITEM);
  end

rule "On Hold Item by same patron with an existing request and hold request check"
  agenda-group "request-or-existing-loan-checks"
  activation-group "request-or-existing-loan-checks"
  when
  $p : OlePatronDocument()
  $i : OleItemRecordForCirc($is: getItemStatusRecord(), null!= $is, $is.getCode() in ("ONHOLD"))
  $dr: OleDeliverRequestBo($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() != $p.getOlePatronId(),
					getRequestTypeCode() in ("Hold/Hold Request","Hold/Delivery Request"))
  $l : OleLoanDocument(isRequestPatron())
  $d : DroolsResponse()

  then
   $d.addErrorMessage("Item is on hold and has an outstanding Hold Request for another patron, so the due date will be truncated accordingly.");
   $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   $d.addErrorMessageCode(DroolsConstants.REQUEST_EXITS_FOR_AVAIL_ITEM);
  end

rule "On Hold Item by same patron with an existing request and copy request check"
  agenda-group "request-or-existing-loan-checks"
  activation-group "request-or-existing-loan-checks"
  when
  $p : OlePatronDocument()
  $i : OleItemRecordForCirc($is: getItemStatusRecord(), null!= $is, $is.getCode() in ("ONHOLD"))
  $dr: OleDeliverRequestBo($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() != $p.getOlePatronId(),
				 getRequestTypeCode() in ("Copy Request"))
  $l : OleLoanDocument(isRequestPatron())
  $d : DroolsResponse()

  then
   $d.addErrorMessage("Item is on hold and has an outstanding Copy Request for another patron, so the due date will be truncated accordingly.");
   $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   $d.addErrorMessageCode(DroolsConstants.REQUEST_EXITS_FOR_AVAIL_ITEM);
  end

rule "Recently Returned Item by same patron with an existing request and hold request check"
  agenda-group "request-or-existing-loan-checks"
  activation-group "request-or-existing-loan-checks"
  when
  $p : OlePatronDocument()
  $i : OleItemRecordForCirc($is: getItemStatusRecord(), null!= $is, $is.getCode() in ("RECENTLY-RETURNED"))
  $dr: OleDeliverRequestBo($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() != $p.getOlePatronId(),
				 getRequestTypeCode() in ("Hold/Hold Request","Hold/Delivery Request"))
  $l : OleLoanDocument(isRequestPatron())
  $d : DroolsResponse()

  then
   $d.addErrorMessage("Item is recently returned and it has an outstanding Hold Request for another patron, so the due date will be truncated accordingly.");
   $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   $d.addErrorMessageCode(DroolsConstants.REQUEST_EXITS_FOR_AVAIL_ITEM);
  end

rule "Recently Returned Item by same patron with an existing request and page request check"
  agenda-group "request-or-existing-loan-checks"
  activation-group "request-or-existing-loan-checks"
  when
  $p : OlePatronDocument()
  $i : OleItemRecordForCirc($is: getItemStatusRecord(), null!= $is, $is.getCode() in ("RECENTLY-RETURNED"))
  $dr: OleDeliverRequestBo($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() != $p.getOlePatronId(),
				 getRequestTypeCode() in ("Page/Hold Request","Page/Delivery Request"))
  $l : OleLoanDocument(isRequestPatron())
  $d : DroolsResponse()

  then
   $d.addErrorMessage("Item is recently returned and it has an outstanding Page Request for another patron, so the due date will be truncated accordingly.");
   $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   $d.addErrorMessageCode(DroolsConstants.REQUEST_EXITS_FOR_AVAIL_ITEM);
  end

rule "Available Item by same patron with an existing request and hold request check"
  agenda-group "request-or-existing-loan-checks"
  activation-group "request-or-existing-loan-checks"
  when
  $p : OlePatronDocument()
  $i : OleItemRecordForCirc($is: getItemStatusRecord(), null!= $is, $is.getCode() in ("AVAILABLE"))
  $dr: OleDeliverRequestBo($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() != $p.getOlePatronId(),
				 getRequestTypeCode() in ("Hold/Hold Request","Hold/Delivery Request"))
  $l : OleLoanDocument(isRequestPatron())
  $d : DroolsResponse()

  then
   $d.addErrorMessage("Item is available and it has an outstanding Hold Request for another patron, so the due date will be truncated accordingly.");
   $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   $d.addErrorMessageCode(DroolsConstants.REQUEST_EXITS_FOR_AVAIL_ITEM);
  end

rule "Available Item by same patron with an existing request and page request check"
  agenda-group "request-or-existing-loan-checks"
  activation-group "request-or-existing-loan-checks"
  when
  $p : OlePatronDocument()
  $i : OleItemRecordForCirc($is: getItemStatusRecord(), null!= $is, $is.getCode() in ("AVAILABLE"))
  $dr: OleDeliverRequestBo($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() != $p.getOlePatronId(),
				 getRequestTypeCode() in ("Page/Hold Request","Page/Delivery Request"))
  $l : OleLoanDocument(isRequestPatron())
  $d : DroolsResponse()

  then
   $d.addErrorMessage("Item is available and it has an outstanding Page Request for another patron, so the due date will be truncated accordingly.");
   $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   $d.addErrorMessageCode(DroolsConstants.REQUEST_EXITS_FOR_AVAIL_ITEM);
  end

rule "Available Item by same patron with an existing request and copy request check"
  agenda-group "request-or-existing-loan-checks"
  activation-group "request-or-existing-loan-checks"
  when
  $p : OlePatronDocument()
  $i : OleItemRecordForCirc($is: getItemStatusRecord(), null!= $is, $is.getCode() in ("AVAILABLE"))
  $dr: OleDeliverRequestBo($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() != $p.getOlePatronId(),
				 getRequestTypeCode() in ("Copy Request"))
  $l : OleLoanDocument(isRequestPatron())
  $d : DroolsResponse()

  then
   $d.addErrorMessage("Item is available and it has an outstanding Copy Request for another patron, so the due date will be truncated accordingly.");
   $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   $d.addErrorMessageCode(DroolsConstants.REQUEST_EXITS_FOR_AVAIL_ITEM);
  end

rule "Available Item by same patron with an existing request and ASR request check"
  agenda-group "request-or-existing-loan-checks"
  activation-group "request-or-existing-loan-checks"
  when
  $p : OlePatronDocument()
  $i : OleItemRecordForCirc($is: getItemStatusRecord(), null!= $is, $is.getCode() in ("AVAILABLE"))
  $dr: OleDeliverRequestBo($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() != $p.getOlePatronId(),
				 getRequestTypeCode() in ("ASR Request"))
  $l : OleLoanDocument(isRequestPatron())
  $d : DroolsResponse()

  then
   $d.addErrorMessage("Item is available and it has an outstanding ASR Request, so the due date will be truncated accordingly.");
   $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   $d.addErrorMessageCode(DroolsConstants.REQUEST_EXITS_FOR_AVAIL_ITEM);
  end

rule "Recently Returned Item by same patron with an existing request and ASR request check"
  agenda-group "request-or-existing-loan-checks"
  activation-group "request-or-existing-loan-checks"
  when
  $p : OlePatronDocument()
  $i : OleItemRecordForCirc($is: getItemStatusRecord(), null!= $is, $is.getCode() in ("RECENTLY-RETURNED"))
  $dr: OleDeliverRequestBo($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() != $p.getOlePatronId(),
				 getRequestTypeCode() in ("ASR Request"))
  $l : OleLoanDocument(isRequestPatron())
  $d : DroolsResponse()

  then
   $d.addErrorMessage("Item is recently returned and it has an outstanding ASR Request, so the due date will be truncated accordingly.");
   $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   $d.addErrorMessageCode(DroolsConstants.REQUEST_EXITS_FOR_AVAIL_ITEM);
  end

rule "On Hold Item by same patron with an existing request and ASR request check"
  agenda-group "request-or-existing-loan-checks"
  activation-group "request-or-existing-loan-checks"
  when
  $p : OlePatronDocument()
  $i : OleItemRecordForCirc($is: getItemStatusRecord(), null!= $is, $is.getCode() in ("ONHOLD"))
  $dr: OleDeliverRequestBo($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() != $p.getOlePatronId(),
				 getRequestTypeCode() in ("ASR Request"))
  $l : OleLoanDocument(isRequestPatron())
  $d : DroolsResponse()

  then
   $d.addErrorMessage("Item is on hold and it has an outstanding ASR Request, so the due date will be truncated accordingly.");
   $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   $d.addErrorMessageCode(DroolsConstants.REQUEST_EXITS_FOR_AVAIL_ITEM);
  end


rule "Available Item with an existing recall request"
    agenda-group "request-or-existing-loan-checks"
    activation-group "request-or-existing-loan-checks"
    when
     $p : OlePatronDocument()
     $i : OleItemRecordForCirc($is: getItemStatusRecord(), null!= $is, $is.getCode() not in ("LOANED"))
     $dr: OleDeliverRequestBo($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() == $p.getOlePatronId(),
				getRequestTypeCode() in ("Recall/Hold Request","Recall/Delivery Request"))
     $l : OleLoanDocument(isRequestPatron())
     $d : DroolsResponse()

    then
     $d.addErrorMessage("The Item has an existing Recall Request and the due date will be truncated accordingly.");
     $d.addErrorMessageCode(DroolsConstants.DUE_DATE_TRUNCATED);
    end

rule "Available Item with an existing hold request"
    agenda-group "request-or-existing-loan-checks"
    activation-group "request-or-existing-loan-checks"
    when
     $p : OlePatronDocument()
     $i : OleItemRecordForCirc($is: getItemStatusRecord(), null!= $is, $is.getCode() not in ("LOANED"))
     $dr: OleDeliverRequestBo($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() == $p.getOlePatronId(),
			      getRequestTypeCode() in ("Hold/Hold Request","Hold/Delivery Request"))
     $l : OleLoanDocument(isRequestPatron())
     $d : DroolsResponse()

    then
     $d.addErrorMessage("The Item has an existing Hold Request and the due date will be truncated accordingly.");
     $d.addErrorMessageCode(DroolsConstants.DUE_DATE_TRUNCATED);
    end

rule "Available Item with an existing page request"
    agenda-group "request-or-existing-loan-checks"
    activation-group "request-or-existing-loan-checks"
    when
     $p : OlePatronDocument()
     $i : OleItemRecordForCirc($is: getItemStatusRecord(), null!= $is, $is.getCode() not in ("LOANED"))
     $dr: OleDeliverRequestBo($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() == $p.getOlePatronId(),
			       getRequestTypeCode() in ("Page/Hold Request","Page/Delivery Request"))
     $l : OleLoanDocument(isRequestPatron())
     $d : DroolsResponse()

    then
     $d.addErrorMessage("The Item has an existing Page Request and the due date will be truncated accordingly.");
     $d.addErrorMessageCode(DroolsConstants.DUE_DATE_TRUNCATED);
    end

rule "Available Item with an existing copy request"
    agenda-group "request-or-existing-loan-checks"
    activation-group "request-or-existing-loan-checks"
    when
     $p : OlePatronDocument()
     $i : OleItemRecordForCirc($is: getItemStatusRecord(), null!= $is, $is.getCode() not in ("LOANED"))
     $dr: OleDeliverRequestBo($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() == $p.getOlePatronId(),
			        getRequestTypeCode() in ("Copy Request"))
     $l : OleLoanDocument(isRequestPatron())
     $d : DroolsResponse()

    then
     $d.addErrorMessage("The Item has an existing Copy Request and the due date will be truncated accordingly.");
     $d.addErrorMessageCode(DroolsConstants.DUE_DATE_TRUNCATED);
    end

rule "Available Item with an existing asr request"
    agenda-group "request-or-existing-loan-checks"
    activation-group "request-or-existing-loan-checks"
    when
     $p : OlePatronDocument()
     $i : OleItemRecordForCirc($is: getItemStatusRecord(), null!= $is, $is.getCode() not in ("LOANED"))
     $dr: OleDeliverRequestBo($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() == $p.getOlePatronId(),
				getRequestTypeCode() in ("ASR Request"))
     $l : OleLoanDocument(isRequestPatron())
     $d : DroolsResponse()

    then
     $d.addErrorMessage("The Item has an existing ASR Request and the due date will be truncated accordingly.");
     $d.addErrorMessageCode(DroolsConstants.DUE_DATE_TRUNCATED);
    end

 rule "Loaned Item by same patron with an existing request by a differnt patron"
  agenda-group "request-or-existing-loan-checks"
   activation-group "request-or-existing-loan-checks"
  when
  $p : OlePatronDocument()
  $l: OleLoanDocument(getLoanId()!=null)
  $dr: OleDeliverRequestBo($p1 : getOlePatron(),$p1!=null ,$p1.getBarcode()!=$p.getBarcode())
  $d : DroolsResponse()

  then
   $d.addErrorMessage("Item has an existing request by the patron who is different than the current borrower.");
   $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   $d.addErrorMessageCode(DroolsConstants.REQUEST_EXITS_FOR_LOANED_ITEM);
  end

 rule "Item loaned by someone else"
  agenda-group "request-or-existing-loan-checks"
   activation-group "request-or-existing-loan-checks"
  when
  $p : OlePatronDocument()
  $l: OleLoanDocument($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId() != $p.getOlePatronId())
  $d : DroolsResponse()

  then
   $d.addErrorMessage("Item currently loaned by some one else.");
   $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   $d.addErrorMessageCode(DroolsConstants.LOANED_BY_DIFFERENT_PATRON);
  end


 rule "Item loaned by same patron without an existing request"
  agenda-group "request-or-existing-loan-checks"
   activation-group "request-or-existing-loan-checks"
  when
  $p : OlePatronDocument()
  $i : OleItemRecordForCirc($dr: getOleDeliverRequestBo(), $dr == null)
  $l: OleLoanDocument($p1: getOlePatron(), $p1 != null, $p1.getOlePatronId().equals($p.getOlePatronId()))
  $d : DroolsResponse()

  then
   $d.addErrorMessage("Item currently loaned by same patron.");
   $d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
   $d.addErrorMessageCode(DroolsConstants.CHECKED_OUT_BY_SAME_PATRON);
  end


